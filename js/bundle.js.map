{"version":3,"file":"bundle.js","sources":["../src/input.js","../src/time.js","../node_modules/Victor/index.js","../src/framework.js","../src/test-game.js"],"sourcesContent":["const Keys = {\n    backspace: 8,\n    TAB: 9,\n    ENTER: 13,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAUSE_BREAK: 19,\n    CAPS_LOCK: 20,\n    ESCAPE: 27,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    END: 35,\n    HOME: 36,\n    LEFT_ARROW: 37,\n    UP_ARROW: 38,\n    RIGHT_ARROW: 39,\n    DOWN_ARROW: 40,\n    INSERT: 45,\n    DELETE: 46,\n    ZERO: 48,\n    ONE: 49,\n    TWO: 50,\n    THREE: 51,\n    FOUR: 52,\n    FIVE: 53,\n    SIX: 54,\n    SEVEN: 55,\n    EIGHT: 56,\n    NINE: 57,\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 85,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90,\n    LEFT_WINDOW_KEY: 91,\n    RIGHT_WINDOW_KEY: 92,\n    SELECT_KEY: 93,\n    NUMPAD_0: 96,\n    NUMPAD_1: 97,\n    NUMPAD_2: 98,\n    NUMPAD_3: 99,\n    NUMPAD_4: 100,\n    NUMPAD_5: 101,\n    NUMPAD_6: 102,\n    NUMPAD_7: 103,\n    NUMPAD_8: 104,\n    NUMPAD_9: 105,\n    MULTIPLY: 106,\n    ADD: 107,\n    SUBTRACT: 109,\n    DECIMAL_POINT: 110,\n    DIVIDE: 111,\n    F1: 112,\n    F2: 113,\n    F3: 114,\n    F4: 115,\n    F5: 116,\n    F6: 117,\n    F7: 118,\n    F8: 119,\n    F9: 120,\n    F10: 121,\n    F11: 122,\n    F12: 123,\n    NUM_LOCK: 144,\n    SCROLL_LOCK: 145,\n    SEMI_COLON: 186,\n    EQUAL_SIGN: 187,\n    COMMA: 188,\n    DASH: 189,\n    PERIOD: 190,\n    FORWARD_SLASH: 191,\n    GRAVE_ACCENT: 192,\n    OPEN_BRACKET: 219,\n    BACK_SLASH: 220,\n    CLOSE_BRAKET: 221,\n    SINGLE_QUOTE: 222\n}\n\n//get mouse pos , do when renderer completed TODO\n","let prevTime = new Date().getTime() / 1000.0;;\nlet time = new Date().getTime() / 1000.0;\nlet dtVal = 0;\n\nexport function update(){\n    this.prevTime = this.time;\n    this.time = new Date().getTime() / 1000.0;\n    this.dtVal = this.time - this.prevTime;\n}\n\n//returns time since start of last frame\nexport function dt() {\n    return this.dtVal;\n}","exports = module.exports = Victor;\n\n/**\n * # Victor - A JavaScript 2D vector class with methods for common vector operations\n */\n\n/**\n * Constructor. Will also work without the `new` keyword\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = Victor(42, 1337);\n *\n * @param {Number} x Value of the x axis\n * @param {Number} y Value of the y axis\n * @return {Victor}\n * @api public\n */\nfunction Victor (x, y) {\n\tif (!(this instanceof Victor)) {\n\t\treturn new Victor(x, y);\n\t}\n\n\t/**\n\t * The X axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.x;\n\t *     // => 42\n\t *\n\t * @api public\n\t */\n\tthis.x = x || 0;\n\n\t/**\n\t * The Y axis\n\t *\n\t * ### Examples:\n\t *     var vec = new Victor.fromArray(42, 21);\n\t *\n\t *     vec.y;\n\t *     // => 21\n\t *\n\t * @api public\n\t */\n\tthis.y = y || 0;\n};\n\n/**\n * # Static\n */\n\n/**\n * Creates a new instance from an array\n *\n * ### Examples:\n *     var vec = Victor.fromArray([42, 21]);\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromArray\n * @param {Array} array Array with the x and y values at index 0 and 1 respectively\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromArray = function (arr) {\n\treturn new Victor(arr[0] || 0, arr[1] || 0);\n};\n\n/**\n * Creates a new instance from an object\n *\n * ### Examples:\n *     var vec = Victor.fromObject({ x: 42, y: 21 });\n *\n *     vec.toString();\n *     // => x:42, y:21\n *\n * @name Victor.fromObject\n * @param {Object} obj Object with the values for x and y\n * @return {Victor} The new instance\n * @api public\n */\nVictor.fromObject = function (obj) {\n\treturn new Victor(obj.x || 0, obj.y || 0);\n};\n\n/**\n * # Manipulation\n *\n * These functions are chainable.\n */\n\n/**\n * Adds another vector's X axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addX(vec2);\n *     vec1.toString();\n *     // => x:30, y:10\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addX = function (vec) {\n\tthis.x += vec.x;\n\treturn this;\n};\n\n/**\n * Adds another vector's Y axis to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.addY(vec2);\n *     vec1.toString();\n *     // => x:10, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addY = function (vec) {\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds another vector to this one\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.add(vec2);\n *     vec1.toString();\n *     // => x:30, y:40\n *\n * @param {Victor} vector The other vector you want to add to this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.add = function (vec) {\n\tthis.x += vec.x;\n\tthis.y += vec.y;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to both vector axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalar(2);\n *     vec.toString();\n *     // => x: 3, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalar = function (scalar) {\n\tthis.x += scalar;\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the X axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarX(2);\n *     vec.toString();\n *     // => x: 3, y: 2\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarX = function (scalar) {\n\tthis.x += scalar;\n\treturn this;\n};\n\n/**\n * Adds the given scalar to the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(1, 2);\n *\n *     vec.addScalarY(2);\n *     vec.toString();\n *     // => x: 1, y: 4\n *\n * @param {Number} scalar The scalar to add\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.addScalarY = function (scalar) {\n\tthis.y += scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the X axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractX(vec2);\n *     vec1.toString();\n *     // => x:80, y:50\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractX = function (vec) {\n\tthis.x -= vec.x;\n\treturn this;\n};\n\n/**\n * Subtracts the Y axis of another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtractY(vec2);\n *     vec1.toString();\n *     // => x:100, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractY = function (vec) {\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts another vector from this one\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(20, 30);\n *\n *     vec1.subtract(vec2);\n *     vec1.toString();\n *     // => x:80, y:20\n *\n * @param {Victor} vector The other vector you want subtract from this one\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtract = function (vec) {\n\tthis.x -= vec.x;\n\tthis.y -= vec.y;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalar(20);\n *     vec.toString();\n *     // => x: 80, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalar = function (scalar) {\n\tthis.x -= scalar;\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarX(20);\n *     vec.toString();\n *     // => x: 80, y: 200\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarX = function (scalar) {\n\tthis.x -= scalar;\n\treturn this;\n};\n\n/**\n * Subtracts the given scalar from the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 200);\n *\n *     vec.subtractScalarY(20);\n *     vec.toString();\n *     // => x: 100, y: 180\n *\n * @param {Number} scalar The scalar to subtract\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.subtractScalarY = function (scalar) {\n\tthis.y -= scalar;\n\treturn this;\n};\n\n/**\n * Divides the X axis by the x component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.divideX(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideX = function (vector) {\n\tthis.x /= vector.x;\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.divideY(vec2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Victor} vector The other vector you want divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideY = function (vector) {\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by a axis values of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.divide(vec2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Victor} vector The vector to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divide = function (vector) {\n\tthis.x /= vector.x;\n\tthis.y /= vector.y;\n\treturn this;\n};\n\n/**\n * Divides both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalar(2);\n *     vec.toString();\n *     // => x:50, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalar = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\treturn this;\n};\n\n/**\n * Divides the X axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarX(2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarX = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.x /= scalar;\n\t} else {\n\t\tthis.x = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Divides the Y axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.divideScalarY(2);\n *     vec.toString();\n *     // => x:100, y:25\n *\n * @param {Number} The scalar to divide by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.divideScalarY = function (scalar) {\n\tif (scalar !== 0) {\n\t\tthis.y /= scalar;\n\t} else {\n\t\tthis.y = 0;\n\t}\n\treturn this;\n};\n\n/**\n * Inverts the X axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertX();\n *     vec.toString();\n *     // => x:-100, y:50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertX = function () {\n\tthis.x *= -1;\n\treturn this;\n};\n\n/**\n * Inverts the Y axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invertY();\n *     vec.toString();\n *     // => x:100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invertY = function () {\n\tthis.y *= -1;\n\treturn this;\n};\n\n/**\n * Inverts both axis\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.invert();\n *     vec.toString();\n *     // => x:-100, y:-50\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.invert = function () {\n\tthis.invertX();\n\tthis.invertY();\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by X component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 0);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyX = function (vector) {\n\tthis.x *= vector.x;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by Y component of given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(0, 2);\n *\n *     vec.multiplyX(vec2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Victor} vector The vector to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyY = function (vector) {\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by values from a given vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     var vec2 = new Victor(2, 2);\n *\n *     vec.multiply(vec2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Victor} vector The vector to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiply = function (vector) {\n\tthis.x *= vector.x;\n\tthis.y *= vector.y;\n\treturn this;\n};\n\n/**\n * Multiplies both vector axis by the given scalar value\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalar(2);\n *     vec.toString();\n *     // => x:200, y:100\n *\n * @param {Number} The scalar to multiply by\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalar = function (scalar) {\n\tthis.x *= scalar;\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the X axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarX(2);\n *     vec.toString();\n *     // => x:200, y:50\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarX = function (scalar) {\n\tthis.x *= scalar;\n\treturn this;\n};\n\n/**\n * Multiplies the Y axis by the given scalar\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.multiplyScalarY(2);\n *     vec.toString();\n *     // => x:100, y:100\n *\n * @param {Number} The scalar to multiply the axis with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.multiplyScalarY = function (scalar) {\n\tthis.y *= scalar;\n\treturn this;\n};\n\n/**\n * Normalize\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.normalize = function () {\n\tvar length = this.length();\n\n\tif (length === 0) {\n\t\tthis.x = 1;\n\t\tthis.y = 0;\n\t} else {\n\t\tthis.divide(Victor(length, length));\n\t}\n\treturn this;\n};\n\nVictor.prototype.norm = Victor.prototype.normalize;\n\n/**\n * If the absolute vector axis is greater than `max`, multiplies the axis by `factor`\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.limit(80, 0.9);\n *     vec.toString();\n *     // => x:90, y:50\n *\n * @param {Number} max The maximum value for both x and y axis\n * @param {Number} factor Factor by which the axis are to be multiplied with\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.limit = function (max, factor) {\n\tif (Math.abs(this.x) > max){ this.x *= factor; }\n\tif (Math.abs(this.y) > max){ this.y *= factor; }\n\treturn this;\n};\n\n/**\n * Randomizes both vector axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomize(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:67, y:73\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomize = function (topLeft, bottomRight) {\n\tthis.randomizeX(topLeft, bottomRight);\n\tthis.randomizeY(topLeft, bottomRight);\n\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeX(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:55, y:50\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeX = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.x, bottomRight.x);\n\tvar max = Math.max(topLeft.x, bottomRight.x);\n\tthis.x = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomizes the y axis with a value between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeY(new Victor(50, 60), new Victor(70, 80`));\n *     vec.toString();\n *     // => x:100, y:66\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeY = function (topLeft, bottomRight) {\n\tvar min = Math.min(topLeft.y, bottomRight.y);\n\tvar max = Math.max(topLeft.y, bottomRight.y);\n\tthis.y = random(min, max);\n\treturn this;\n};\n\n/**\n * Randomly randomizes either axis between 2 vectors\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.randomizeAny(new Victor(50, 60), new Victor(70, 80));\n *     vec.toString();\n *     // => x:100, y:77\n *\n * @param {Victor} topLeft first vector\n * @param {Victor} bottomRight second vector\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.randomizeAny = function (topLeft, bottomRight) {\n\tif (!! Math.round(Math.random())) {\n\t\tthis.randomizeX(topLeft, bottomRight);\n\t} else {\n\t\tthis.randomizeY(topLeft, bottomRight);\n\t}\n\treturn this;\n};\n\n/**\n * Rounds both axis to an integer value\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.unfloat = function () {\n\tthis.x = Math.round(this.x);\n\tthis.y = Math.round(this.y);\n\treturn this;\n};\n\n/**\n * Rounds both axis to a certain precision\n *\n * ### Examples:\n *     var vec = new Victor(100.2, 50.9);\n *\n *     vec.unfloat();\n *     vec.toString();\n *     // => x:100, y:51\n *\n * @param {Number} Precision (default: 8)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.toFixed = function (precision) {\n\tif (typeof precision === 'undefined') { precision = 8; }\n\tthis.x = this.x.toFixed(precision);\n\tthis.y = this.y.toFixed(precision);\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the X axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixX(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:100\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixX = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.x = (1 - amount) * this.x + amount * vec.x;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation of the Y axis towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mixY(vec2, 0.5);\n *     vec.toString();\n *     // => x:100, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mixY = function (vec, amount) {\n\tif (typeof amount === 'undefined') {\n\t\tamount = 0.5;\n\t}\n\n\tthis.y = (1 - amount) * this.y + amount * vec.y;\n\treturn this;\n};\n\n/**\n * Performs a linear blend / interpolation towards another vector\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 100);\n *     var vec2 = new Victor(200, 200);\n *\n *     vec1.mix(vec2, 0.5);\n *     vec.toString();\n *     // => x:150, y:150\n *\n * @param {Victor} vector The other vector\n * @param {Number} amount The blend amount (optional, default: 0.5)\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.mix = function (vec, amount) {\n\tthis.mixX(vec, amount);\n\tthis.mixY(vec, amount);\n\treturn this;\n};\n\n/**\n * # Products\n */\n\n/**\n * Creates a clone of this vector\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = vec1.clone();\n *\n *     vec2.toString();\n *     // => x:10, y:10\n *\n * @return {Victor} A clone of the vector\n * @api public\n */\nVictor.prototype.clone = function () {\n\treturn new Victor(this.x, this.y);\n};\n\n/**\n * Copies another vector's X component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyX(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:10\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyX = function (vec) {\n\tthis.x = vec.x;\n\treturn this;\n};\n\n/**\n * Copies another vector's Y component in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copyY(vec1);\n *\n *     vec2.toString();\n *     // => x:10, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copyY = function (vec) {\n\tthis.y = vec.y;\n\treturn this;\n};\n\n/**\n * Copies another vector's X and Y components in to its own\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *     var vec2 = new Victor(20, 20);\n *     var vec2 = vec1.copy(vec1);\n *\n *     vec2.toString();\n *     // => x:20, y:20\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.copy = function (vec) {\n\tthis.copyX(vec);\n\tthis.copyY(vec);\n\treturn this;\n};\n\n/**\n * Sets the vector to zero (0,0)\n *\n * ### Examples:\n *     var vec1 = new Victor(10, 10);\n *\t\t var1.zero();\n *     vec1.toString();\n *     // => x:0, y:0\n *\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.zero = function () {\n\tthis.x = this.y = 0;\n\treturn this;\n};\n\n/**\n * Calculates the dot product of this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.dot(vec2);\n *     // => 23000\n *\n * @param {Victor} vector The second vector\n * @return {Number} Dot product\n * @api public\n */\nVictor.prototype.dot = function (vec2) {\n\treturn this.x * vec2.x + this.y * vec2.y;\n};\n\nVictor.prototype.cross = function (vec2) {\n\treturn (this.x * vec2.y ) - (this.y * vec2.x );\n};\n\n/**\n * Projects a vector onto another vector, setting itself to the result.\n *\n * ### Examples:\n *     var vec = new Victor(100, 0);\n *     var vec2 = new Victor(100, 100);\n *\n *     vec.projectOnto(vec2);\n *     vec.toString();\n *     // => x:50, y:50\n *\n * @param {Victor} vector The other vector you want to project this vector onto\n * @return {Victor} `this` for chaining capabilities\n * @api public\n */\nVictor.prototype.projectOnto = function (vec2) {\n    var coeff = ( (this.x * vec2.x)+(this.y * vec2.y) ) / ((vec2.x*vec2.x)+(vec2.y*vec2.y));\n    this.x = coeff * vec2.x;\n    this.y = coeff * vec2.y;\n    return this;\n};\n\n\nVictor.prototype.horizontalAngle = function () {\n\treturn Math.atan2(this.y, this.x);\n};\n\nVictor.prototype.horizontalAngleDeg = function () {\n\treturn radian2degrees(this.horizontalAngle());\n};\n\nVictor.prototype.verticalAngle = function () {\n\treturn Math.atan2(this.x, this.y);\n};\n\nVictor.prototype.verticalAngleDeg = function () {\n\treturn radian2degrees(this.verticalAngle());\n};\n\nVictor.prototype.angle = Victor.prototype.horizontalAngle;\nVictor.prototype.angleDeg = Victor.prototype.horizontalAngleDeg;\nVictor.prototype.direction = Victor.prototype.horizontalAngle;\n\nVictor.prototype.rotate = function (angle) {\n\tvar nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n\tvar ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n\tthis.x = nx;\n\tthis.y = ny;\n\n\treturn this;\n};\n\nVictor.prototype.rotateDeg = function (angle) {\n\tangle = degrees2radian(angle);\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateTo = function(rotation) {\n\treturn this.rotate(rotation-this.angle());\n};\n\nVictor.prototype.rotateToDeg = function(rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateTo(rotation);\n};\n\nVictor.prototype.rotateBy = function (rotation) {\n\tvar angle = this.angle() + rotation;\n\n\treturn this.rotate(angle);\n};\n\nVictor.prototype.rotateByDeg = function (rotation) {\n\trotation = degrees2radian(rotation);\n\treturn this.rotateBy(rotation);\n};\n\n/**\n * Calculates the distance of the X axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceX(vec2);\n *     // => -100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceX = function (vec) {\n\treturn this.x - vec.x;\n};\n\n/**\n * Same as `distanceX()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.absDistanceX(vec2);\n *     // => 100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceX = function (vec) {\n\treturn Math.abs(this.distanceX(vec));\n};\n\n/**\n * Calculates the distance of the Y axis between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => -10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceY = function (vec) {\n\treturn this.y - vec.y;\n};\n\n/**\n * Same as `distanceY()` but always returns an absolute number\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceY(vec2);\n *     // => 10\n *\n * @param {Victor} vector The second vector\n * @return {Number} Absolute distance\n * @api public\n */\nVictor.prototype.absDistanceY = function (vec) {\n\treturn Math.abs(this.distanceY(vec));\n};\n\n/**\n * Calculates the euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distance(vec2);\n *     // => 100.4987562112089\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distance = function (vec) {\n\treturn Math.sqrt(this.distanceSq(vec));\n};\n\n/**\n * Calculates the squared euclidean distance between this vector and another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(200, 60);\n *\n *     vec1.distanceSq(vec2);\n *     // => 10100\n *\n * @param {Victor} vector The second vector\n * @return {Number} Distance\n * @api public\n */\nVictor.prototype.distanceSq = function (vec) {\n\tvar dx = this.distanceX(vec),\n\t\tdy = this.distanceY(vec);\n\n\treturn dx * dx + dy * dy;\n};\n\n/**\n * Calculates the length or magnitude of the vector\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.length();\n *     // => 111.80339887498948\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.length = function () {\n\treturn Math.sqrt(this.lengthSq());\n};\n\n/**\n * Squared length / magnitude\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *\n *     vec.lengthSq();\n *     // => 12500\n *\n * @return {Number} Length / Magnitude\n * @api public\n */\nVictor.prototype.lengthSq = function () {\n\treturn this.x * this.x + this.y * this.y;\n};\n\nVictor.prototype.magnitude = Victor.prototype.length;\n\n/**\n * Returns a true if vector is (0, 0)\n *\n * ### Examples:\n *     var vec = new Victor(100, 50);\n *     vec.zero();\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isZero = function() {\n\treturn this.x === 0 && this.y === 0;\n};\n\n/**\n * Returns a true if this vector is the same as another\n *\n * ### Examples:\n *     var vec1 = new Victor(100, 50);\n *     var vec2 = new Victor(100, 50);\n *     vec1.isEqualTo(vec2);\n *\n *     // => true\n *\n * @return {Boolean}\n * @api public\n */\nVictor.prototype.isEqualTo = function(vec2) {\n\treturn this.x === vec2.x && this.y === vec2.y;\n};\n\n/**\n * # Utility Methods\n */\n\n/**\n * Returns an string representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toString();\n *     // => x:10, y:20\n *\n * @return {String}\n * @api public\n */\nVictor.prototype.toString = function () {\n\treturn 'x:' + this.x + ', y:' + this.y;\n};\n\n/**\n * Returns an array representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toArray();\n *     // => [10, 20]\n *\n * @return {Array}\n * @api public\n */\nVictor.prototype.toArray = function () {\n\treturn [ this.x, this.y ];\n};\n\n/**\n * Returns an object representation of the vector\n *\n * ### Examples:\n *     var vec = new Victor(10, 20);\n *\n *     vec.toObject();\n *     // => { x: 10, y: 20 }\n *\n * @return {Object}\n * @api public\n */\nVictor.prototype.toObject = function () {\n\treturn { x: this.x, y: this.y };\n};\n\n\nvar degrees = 180 / Math.PI;\n\nfunction random (min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction radian2degrees (rad) {\n\treturn rad * degrees;\n}\n\nfunction degrees2radian (deg) {\n\treturn deg / degrees;\n}\n","import * as Input from './input';\nimport * as Time from './time';\nimport 'Victor';\n\nlet vec = new Victor(100, 200);\nlet canvas;\nlet context;\nlet spriteMap = new Map();\nlet loop;\nlet timer;\n\nexport function loadImage(url){\n    if(!spriteMap.has(url)){\n        //todo improve\n        let img = new Image(); \n        img.src = url;\n\n        spriteMap.set(url, img);\n    }\n\n    return spriteMap.get(url);\n}\n\nexport function init(canvas, init, mainLoop) {\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n\n    loop = mainLoop;\n    init();\n    run();\n}\n\nfunction run(){\n    Time.update();\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    loop();\n\n    //draw something\n    requestAnimationFrame(this.run);\n}\n\n\nexport class GameObject {\n    constructor(sprite){\n        this.sprite = sprite;\n    }\n\n    update(){\n\n    }\n\n    draw(){\n        this.sprite.draw();\n    }\n}\n\nexport class Sprite {\n    constructor(context, url, pos, cords){\n        this.context = context;\n        this.image = loadImage(url);\n        this.x = x;\n        this.y = y;\n\n        //TODO coords\n    }\n\n    draw(){\n        this.context.drawImage(this.image, this.x, this.y, 100, 100);\n        // dx, dy, dWidth, dHeight);\n    }\n}\n\n","import * as framework from './framework';\n\nlet img = framework.loadImage(\"images/spritesheet-demo.png\");\nlet sprite = new framework.Sprite(document.getElementById(\"canvas\").getContext('2d'), \"images/spritesheet-demo.png\", 0, 0);\n\nfunction init() {\n}\n\nfunction loop() {\n    sprite.draw();\n}\n\nframework.init(document.getElementById(\"canvas\"), init, loop);\n"],"names":["Victor","loop","init","Time.update","framework.loadImage","framework.Sprite","framework.init"],"mappings":"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"}